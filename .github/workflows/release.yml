name: Release Please

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Release Please
        id: release
        uses: googleapis/release-please-action@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          config-file: .release-please-config.json
          manifest-file: .release-please-manifest.json
          release-type: node
          draft: true 

      - name: Merge release PR
        if: steps.release.outputs.pull-request-number
        uses: devops-infra/action-pull-request-merge@v0.5.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          pull_request_number: ${{ steps.release.outputs.pull-request-number }}
          merge_method: squash



      - name: Publish draft release
        if: steps.release.outputs.pull-request-number
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const release = await github.rest.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            const draft = release.data.find(r => r.draft && r.tag_name === context.ref.replace('refs/heads/', 'v'));
            if(draft){
              await github.rest.repos.updateRelease({
                owner: context.repo.owner,
                repo: context.repo.repo,
                release_id: draft.id,
                draft: false
              });
            }
